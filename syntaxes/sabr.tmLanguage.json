{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Sabr",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numeric"
		},
		{
			"include": "#char"
		},
		{
			"include": "#preproc"
		},
		{
			"include": "#ident"
		},
		{
			"include": "#class"
		},
		{
			"include": "#token"
		},
		{
			"include": "#other"
		}
	],
	"repository": {
		"comment": {
			"name": "comment",
			"patterns": [
				{
					"name": "comment.line.double-slash.sabr",
					"match": "\\\\.*$"
				},
				{
					"name": "comment.block.sabr",
					"begin": "\\(",
					"end": "\\)$"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.sabr",
					"match": "(exit|end|if|else|loop|while|break|continue|for|ufor|ffor|from|to|step|switch|case|pass|func|macro|defer|return|struct|member)"
				},
				{
					"name": "keyword.operator.sabr",
					"match": "(set|addr|ref|\\+|-|\\*|/|%|u/|u%|neg|\\+\\+|--|=|!=|>|>=|<|<=|u>|u>=|u<|u<=|f\\+|f-|f\\*|f/|f%|fneg|f=|f!=|f>|f>=|f<|f<=|&|\\||\\^|~|<<|>>|2?(drop|nip|dup|over|tuck|swap|rot)|alloc|resize|free|allot|fetch|store|itof|utof|ftoi|ftou|show)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.sabr",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.sabr",
					"match": "\\\\."
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "constant.numeric.sabr",
					"match": "(\\+|-)?\\d+"
				},
				{
					"name": "constant.numeric.sabr",
					"match": "(\\+|-)?\\.\\d+(e-?\\d+)?"
				},
				{
					"name": "constant.numeric.sabr",
					"match": "(\\+|-)?\\d+\\.\\d*(e-?\\d+)?"
				},
				{
					"name": "constant.numeric.sabr",
					"match": "(\\+|-)?(0(x\\h*|o[0-7]*|b[0-1]*))"
				},
				{
					"name":"invalid.illegal.sabr",
					"match": "(\\+|-)?(0(x\\w*|o\\w*|b\\w*))"
				},
				{
					"name": "invalid.illegal.sabr",
					"match": "(\\+|-)?\\d+\\.\\d+e\\S*"
				},
				{
					"name": "invalid.illegal.sabr",
					"match": "(\\+|-)?\\d+\\.\\S*"
				},
				{
					"name": "invalid.illegal.sabr",
					"match": "(\\+|-)?\\.\\d+\\S+"
				},
				{
					"name": "invalid.illegal.sabr",
					"match": "(\\+|-)?\\d+\\S+"
				}
				
			]
		},
		"char": {
			"name": "string.quoted.single.sabr",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.sabr",
					"match": "\\\\."
				}
			]
		},
		"preproc": {
			"patterns": [
				{
					"name": "keyword.control.sabr",
					"match": "#\\S+"
				},
				{
					"name": "string.other.sabr",
					"begin": "{",
					"end": "}"
				}
			]
		},
		"ident": {
			"patterns": [
				{
					"name": "invalid.illegal.sabr",
					"match": "\\$(\\d|@|\\(|\\)|{|}|\\$|\\\\|'\")\\S*"
				},
				{
					"name": "invalid.illegal.sabr",
					"match": "\\$(\\+|-|\\.)\\d\\S*"
				},
				{
					"name": "constant.other.sabr",
					"match": "\\$\\S+"
				}
			]
		},
		"class": {
			"name": "entity.name.class.sabr",
			"match": "\\S+\\.\\S+"
		},
		"token": {
			"name": "variable.other.sabr",
			"match": "\\$\\S+"
		},
		"other": {
			"name": "variable.name.sabr",
			"match": "\\S+"
		}
	},
	"scopeName": "source.sabr"
}